ImageRuntimeVersion: v4.0.30319
Assembly SMemory-x64, Version=1.0.*, Culture=Invariant Language (Invariant Country): 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Assembly System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=None, flags=None
Class MyMemory.Structures: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct MyMemory.Structures+BaseRegisters: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    IntPtr R15 : Public
    IntPtr R14 : Public
    IntPtr R13 : Public
    IntPtr R12 : Public
    IntPtr R11 : Public
    IntPtr R10 : Public
    IntPtr R8 : Public
    IntPtr R9 : Public
    IntPtr Rdi : Public
    IntPtr Rsi : Public
    IntPtr Rdx : Public
    IntPtr Rcx : Public
    IntPtr Rbx : Public
    IntPtr Rax : Public
    IntPtr Rbp : Public
    IntPtr Rsp : Public
Struct MyMemory.Structures+ThreadContext: AutoLayout, AnsiClass, Class, NestedPublic, SequentialLayout, Sealed, BeforeFieldInit
  :System.ValueType
  Fields:
    UInt64 P1Home : Public
    UInt64 P2Home : Public
    UInt64 P3Home : Public
    UInt64 P4Home : Public
    UInt64 P5Home : Public
    UInt64 P6Home : Public
    UInt32 ContextFlags IsLong : Public
    UInt32 MxCsr IsLong : Public
    UInt16 SegCs : Public
    UInt16 SegDs : Public
    UInt16 SegEs : Public
    UInt16 SegFs : Public
    UInt16 SegGs : Public
    UInt16 SegSs : Public
    UInt32 EFlags IsLong : Public
    UInt64 Dr0 : Public
    UInt64 Dr1 : Public
    UInt64 Dr2 : Public
    UInt64 Dr3 : Public
    UInt64 Dr6 : Public
    UInt64 Dr7 : Public
    UInt64 Rax : Public
    UInt64 Rcx : Public
    UInt64 Rdx : Public
    UInt64 Rbx : Public
    UInt64 Rsp : Public
    UInt64 Rbp : Public
    UInt64 Rsi : Public
    UInt64 Rdi : Public
    UInt64 R8 : Public
    UInt64 R9 : Public
    UInt64 R10 : Public
    UInt64 R11 : Public
    UInt64 R12 : Public
    UInt64 R13 : Public
    UInt64 R14 : Public
    UInt64 R15 : Public
    UInt64 Rip : Public
    Byte[] FltSave : Public, HasFieldMarshal
    Byte[] VectorRegister : Public, HasFieldMarshal
    UInt64 VectorControl : Public
    UInt64 DebugControl : Public
    UInt64 LastBranchToRip : Public
    UInt64 LastBranchFromRip : Public
    UInt64 LastExceptionToRip : Public
    UInt64 LastExceptionFromRip : Public
Class MyMemory.Enumerations: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Struct MyMemory.Enumerations+MemoryProtectionFlags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    MemoryProtectionFlags Execute = 16 : Public, Static, Literal, HasDefault
    MemoryProtectionFlags ExecuteRead = 32 : Public, Static, Literal, HasDefault
    MemoryProtectionFlags ExecuteReadWrite = 64 : Public, Static, Literal, HasDefault
    MemoryProtectionFlags ExecuteWriteCopy = 128 : Public, Static, Literal, HasDefault
    MemoryProtectionFlags NoAccess = 1 : Public, Static, Literal, HasDefault
    MemoryProtectionFlags ReadOnly = 2 : Public, Static, Literal, HasDefault
    MemoryProtectionFlags ReadWrite = 4 : Public, Static, Literal, HasDefault
    MemoryProtectionFlags WriteCopy = 8 : Public, Static, Literal, HasDefault
    MemoryProtectionFlags GuardModifierflag = 256 : Public, Static, Literal, HasDefault
    MemoryProtectionFlags NoCacheModifierflag = 512 : Public, Static, Literal, HasDefault
    MemoryProtectionFlags WriteCombineModifierflag = 1024 : Public, Static, Literal, HasDefault
Struct MyMemory.Enumerations+ThreadCreationFlags: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.Enum
  Fields:
    UInt32 value__ : Public, SpecialName, RTSpecialName
    ThreadCreationFlags Run = 0 : Public, Static, Literal, HasDefault
    ThreadCreationFlags Suspended = 4 : Public, Static, Literal, HasDefault
    ThreadCreationFlags StackSizeParamIsAReservation = 65536 : Public, Static, Literal, HasDefault
Class MyMemory.RemoteProcess: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    IntPtr ProcessHandle 'get ' : 
    UInt32 ProcessId 'get ' : 
    MyMemory.Patterns.PatternsManager PatternsManager 'get ' : 
    MyMemory.Hooks.HooksManager HooksManager 'get ' : 
    MyMemory.Threads.ThreadsManager ThreadsManager 'get ' : 
    MyMemory.Modules.ModulesManager ModulesManager 'get ' : 
    MyMemory.Memory.MemoryManager MemoryManager 'get ' : 
    MyMemory.Assembly.Yasm Yasm 'get ' : 
  Methods:
    get_Yasm(): PrivateScope, Public, HideBySig, SpecialName
    get_MemoryManager(): PrivateScope, Public, HideBySig, SpecialName
    get_ModulesManager(): PrivateScope, Public, HideBySig, SpecialName
    get_ThreadsManager(): PrivateScope, Public, HideBySig, SpecialName
    get_HooksManager(): PrivateScope, Public, HideBySig, SpecialName
    get_PatternsManager(): PrivateScope, Public, HideBySig, SpecialName
    get_ProcessId(): PrivateScope, Public, HideBySig, SpecialName
    get_ProcessHandle(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class MyMemory.Utils.MarshalCache`1[T]: AutoLayout, AnsiClass, Class, Public
  Type parameter: T
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    System.Type RealType : Public, Static
    Int32 Size : Public, Static
    UInt32 SizeU : Public, Static
    System.TypeCode TypeCode : Public, Static
    Boolean TypeRequireMarshal : Public, Static
    Boolean IsIntPtr : Public, Static
Class MyMemory.Utils.Assembly: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
Class MyMemory.Utils.Randoms: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Methods:
    GetRandomString(Int32, Int32): PrivateScope, Public, Static, HideBySig
Class MyMemory.Assembly.Yasm: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(MyMemory.RemoteProcess, Int32, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    MyMemory.RemoteProcess Process 'get ' : 
    Int32 Bits 'get ' : 
  Methods:
    SetBufferSize(Int32): PrivateScope, Public, HideBySig
    Assemble(String[]): PrivateScope, Public, HideBySig
    Assemble(String[], IntPtr): PrivateScope, Public, HideBySig
    Inject(String[], IntPtr): PrivateScope, Public, HideBySig
    InjectAndExecute(String[]): PrivateScope, Public, HideBySig
    InjectAndExecute(String[], IntPtr): PrivateScope, Public, HideBySig
    get_Bits(): PrivateScope, Public, HideBySig, SpecialName
    get_Process(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class MyMemory.Memory.MemoryManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(MyMemory.RemoteProcess): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MyMemory.RemoteProcess Process 'get ' : 
  Methods:
    Read(IntPtr): PrivateScope, Public, HideBySig
    ReadBytes(IntPtr, Int32): PrivateScope, Public, HideBySig
    ReadString(IntPtr): PrivateScope, Public, HideBySig
    ReadString(IntPtr, Encoding): PrivateScope, Public, HideBySig
    ReadString(IntPtr, Encoding, Int32): PrivateScope, Public, HideBySig
    Write(IntPtr, T): PrivateScope, Public, HideBySig
    WriteBytes(IntPtr, Byte[]): PrivateScope, Public, HideBySig
    WriteString(IntPtr, String): PrivateScope, Public, HideBySig
    WriteString(IntPtr, Encoding, String): PrivateScope, Public, HideBySig
    ProtectMemory(IntPtr, UInt32 IsLong, MemoryProtectionFlags): PrivateScope, Public, HideBySig
    AllocateMemory(UInt32 IsLong): PrivateScope, Public, HideBySig
    AllocateMemory(UInt32 IsLong, MemoryProtectionFlags): PrivateScope, Public, HideBySig
    AllocateRawMemory(UInt32 IsLong): PrivateScope, Public, HideBySig
    AllocateRawMemory(UInt32 IsLong, MemoryProtectionFlags): PrivateScope, Public, HideBySig
    FreeRawMemory(IntPtr): PrivateScope, Public, HideBySig
    get_Process(): PrivateScope, Public, HideBySig, SpecialName
Class MyMemory.Memory.RemotePointer: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(MyMemory.RemoteProcess, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsValid 'get ' : 
    IntPtr Pointer 'get set' : 
    IntPtr vTable 'get ' : 
    MyMemory.RemoteProcess Process 'get ' : 
  Methods:
    Read(): PrivateScope, Public, HideBySig
    Read(Int32): PrivateScope, Public, HideBySig
    ReadBytes(Int32): PrivateScope, Public, HideBySig
    ReadBytes(Int32, Int32): PrivateScope, Public, HideBySig
    ReadString(Int32): PrivateScope, Public, HideBySig
    ReadString(Int32, Encoding): PrivateScope, Public, HideBySig
    ReadString(Int32, Encoding, Int32): PrivateScope, Public, HideBySig
    Write(T): PrivateScope, Public, HideBySig
    Write(Int32, T): PrivateScope, Public, HideBySig
    WriteBytes(Byte[]): PrivateScope, Public, HideBySig
    WriteBytes(Int32, Byte[]): PrivateScope, Public, HideBySig
    WriteString(String): PrivateScope, Public, HideBySig
    WriteString(Int32, String): PrivateScope, Public, HideBySig
    WriteString(Int32, Encoding, String): PrivateScope, Public, HideBySig
    get_Process(): PrivateScope, Public, HideBySig, SpecialName
    get_vTable(): PrivateScope, Public, HideBySig, SpecialName
    get_Pointer(): PrivateScope, Public, HideBySig, SpecialName
    set_Pointer(IntPtr): PrivateScope, Public, HideBySig, SpecialName
    get_IsValid(): PrivateScope, Public, HideBySig, SpecialName
Class MyMemory.Memory.RemoteRegion: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MyMemory.Memory.RemotePointer
    Void .ctor(MyMemory.RemoteProcess, IntPtr, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 Size 'get ' IsLong : 
  Methods:
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
Class MyMemory.Memory.RemoteMemoryProtection: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MyMemory.Memory.RemoteRegion
    Void .ctor(MyMemory.RemoteProcess, IntPtr, UInt32, MemoryProtectionFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    MemoryProtectionFlags OldProtection 'get ' : 
    MemoryProtectionFlags NewProtection 'get ' : 
  Methods:
    get_NewProtection(): PrivateScope, Public, HideBySig, SpecialName
    get_OldProtection(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class MyMemory.Memory.RemoteAllocatedMemory: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MyMemory.Memory.RemoteRegion
    Void .ctor(MyMemory.RemoteProcess, IntPtr, UInt32, MemoryProtectionFlags): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    MemoryProtectionFlags Protection 'get ' : 
    IntPtr Item [System.String] 'get ' : 
  Methods:
    AllocateOfChunk(String): PrivateScope, Public, HideBySig
    AllocateOfChunk(String, Int32): PrivateScope, Public, HideBySig
    GetAllocatedChunk(String): PrivateScope, Public, HideBySig
    Write(String, T): PrivateScope, Public, HideBySig
    Write(String, Int32, T): PrivateScope, Public, HideBySig
    Read(String): PrivateScope, Public, HideBySig
    Read(String, Int32): PrivateScope, Public, HideBySig
    WriteBytes(String, Byte[]): PrivateScope, Public, HideBySig
    WriteBytes(String, Int32, Byte[]): PrivateScope, Public, HideBySig
    ReadBytes(String, Int32): PrivateScope, Public, HideBySig
    ReadBytes(String, Int32, Int32): PrivateScope, Public, HideBySig
    WriteString(String, String): PrivateScope, Public, HideBySig
    WriteString(String, Encoding, String): PrivateScope, Public, HideBySig
    WriteString(String, Int32, String): PrivateScope, Public, HideBySig
    WriteString(String, Int32, Encoding, String): PrivateScope, Public, HideBySig
    ReadString(String): PrivateScope, Public, HideBySig
    ReadString(String, Int32): PrivateScope, Public, HideBySig
    ReadString(String, Int32, Encoding): PrivateScope, Public, HideBySig
    ReadString(String, Int32, Int32): PrivateScope, Public, HideBySig
    ReadString(String, Int32, Encoding, Int32): PrivateScope, Public, HideBySig
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
    get_Protection(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class MyMemory.Modules.ModulesManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(MyMemory.RemoteProcess): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MyMemory.Modules.RemoteModule Item [System.String] 'get ' : 
    System.Collections.Generic.List`1[MyMemory.Modules.RemoteModule] Modules 'get ' : 
    MyMemory.Modules.RemoteModule MainModule 'get ' : 
    MyMemory.RemoteProcess Process 'get ' : 
  Methods:
    GetModule(String): PrivateScope, Public, HideBySig
    get_Process(): PrivateScope, Public, HideBySig, SpecialName
    get_MainModule(): PrivateScope, Public, HideBySig, SpecialName
    get_Modules(): PrivateScope, Public, HideBySig, SpecialName
    get_Item(String): PrivateScope, Public, HideBySig, SpecialName
Class MyMemory.Modules.RemoteModule: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MyMemory.Memory.RemotePointer
    Void .ctor(MyMemory.RemoteProcess, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    UInt32 Size 'get ' IsLong : 
    System.String FileName 'get ' : 
    System.String BaseName 'get ' : 
    IntPtr EntryPointAddress 'get ' : 
    IntPtr BaseAddress 'get ' : 
  Methods:
    get_BaseAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_EntryPointAddress(): PrivateScope, Public, HideBySig, SpecialName
    get_BaseName(): PrivateScope, Public, HideBySig, SpecialName
    get_FileName(): PrivateScope, Public, HideBySig, SpecialName
    get_Size(): PrivateScope, Public, HideBySig, SpecialName
Class MyMemory.Threads.ThreadsManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(MyMemory.RemoteProcess): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MyMemory.Threads.RemoteThread MainThread 'get ' : 
    System.Collections.Generic.List`1[MyMemory.Threads.RemoteThread] Threads 'get ' : 
    MyMemory.RemoteProcess Process 'get ' : 
  Methods:
    CreateRemoteThread(IntPtr): PrivateScope, Public, HideBySig
    CreateRemoteThread(IntPtr, IntPtr): PrivateScope, Public, HideBySig
    CreateRemoteThread(IntPtr, IntPtr, ThreadCreationFlags): PrivateScope, Public, HideBySig
    get_Process(): PrivateScope, Public, HideBySig, SpecialName
    get_Threads(): PrivateScope, Public, HideBySig, SpecialName
    get_MainThread(): PrivateScope, Public, HideBySig, SpecialName
Class MyMemory.Threads.RemoteThread: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(MyMemory.RemoteProcess, IntPtr): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(MyMemory.RemoteProcess, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    UInt32 ExitCodeThread 'get ' IsLong : 
    IntPtr ThreadHandle 'get ' : 
    UInt32 ThreadId 'get ' IsLong : 
    MyMemory.RemoteProcess Process 'get ' : 
  Methods:
    SuspendThread(): PrivateScope, Public, HideBySig
    ResumeThread(): PrivateScope, Public, HideBySig
    GetThreadContext(ThreadContext&(Out)): PrivateScope, Public, HideBySig
    SetThreadContext(ThreadContext&): PrivateScope, Public, HideBySig
    TerminateThread(UInt32 IsLong): PrivateScope, Public, HideBySig
    Join(): PrivateScope, Public, HideBySig
    get_Process(): PrivateScope, Public, HideBySig, SpecialName
    get_ThreadId(): PrivateScope, Public, HideBySig, SpecialName
    get_ThreadHandle(): PrivateScope, Public, HideBySig, SpecialName
    get_ExitCodeThread(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class MyMemory.Hooks.HooksManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(MyMemory.RemoteProcess): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    MyMemory.Hooks.HookBase[] Hooks 'get ' : 
    MyMemory.RemoteProcess Process 'get ' : 
  Methods:
    CreateJmpHook(IntPtr, Int32): PrivateScope, Public, HideBySig
    CreateAndApplyJmpHook(IntPtr, Int32): PrivateScope, Public, HideBySig
    CreateVmtOverwriteHook(IntPtr, Int32): PrivateScope, Public, HideBySig
    CreateAndApplyVmtOverwriteHook(IntPtr, Int32): PrivateScope, Public, HideBySig
    CreateVmtCopyHook(IntPtr, Int32): PrivateScope, Public, HideBySig
    CreateAndApplyVmtCopyHook(IntPtr, Int32): PrivateScope, Public, HideBySig
    get_Process(): PrivateScope, Public, HideBySig, SpecialName
    get_Hooks(): PrivateScope, Public, HideBySig, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class MyMemory.Hooks.HookBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(MyMemory.RemoteProcess): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    Boolean IsApplied 'get ' : 
    MyMemory.Hooks.CallbackNotifier Notifier 'get ' : 
    MyMemory.Hooks.CallbackExecutor Executor 'get ' : 
    BaseRegisters BaseRegisters 'get ' : 
    MyMemory.RemoteProcess Process 'get ' : 
  Methods:
    AddCallback(CallbackBase): PrivateScope, Public, HideBySig
    get_Process(): PrivateScope, Public, HideBySig, SpecialName
    get_BaseRegisters(): PrivateScope, Public, HideBySig, SpecialName
    get_Executor(): PrivateScope, Public, HideBySig, SpecialName
    get_Notifier(): PrivateScope, Public, HideBySig, SpecialName
    Apply(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    Remove(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_IsApplied(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class MyMemory.Hooks.HookJmp: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MyMemory.Hooks.HookBase
    Void .ctor(MyMemory.RemoteProcess, IntPtr, UInt32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsApplied 'get ' : 
  Methods:
    Apply(): PrivateScope, Public, Virtual, HideBySig
    Remove(): PrivateScope, Public, Virtual, HideBySig
    get_IsApplied(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class MyMemory.Hooks.HookVmtOverwrite: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MyMemory.Hooks.HookBase
    Void .ctor(MyMemory.RemoteProcess, IntPtr, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsApplied 'get ' : 
  Methods:
    Apply(): PrivateScope, Public, Virtual, HideBySig
    Remove(): PrivateScope, Public, Virtual, HideBySig
    get_IsApplied(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class MyMemory.Hooks.HookVmtCopy: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MyMemory.Hooks.HookBase
    Void .ctor(MyMemory.RemoteProcess, IntPtr, Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    Boolean IsApplied 'get ' : 
  Methods:
    Apply(): PrivateScope, Public, Virtual, HideBySig
    Remove(): PrivateScope, Public, Virtual, HideBySig
    get_IsApplied(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class MyMemory.Hooks.CallbackBase: AutoLayout, AnsiClass, Class, Public, Abstract, BeforeFieldInit
    Void .ctor(MyMemory.Hooks.HookBase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Properties:
    IntPtr EntryPointPointer 'get ' : 
    MyMemory.Hooks.HookBase Hook 'get ' : 
  Methods:
    get_Hook(): PrivateScope, Public, HideBySig, SpecialName
    get_EntryPointPointer(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class MyMemory.Hooks.CallbackExecutor: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MyMemory.Hooks.CallbackBase
    Void .ctor(MyMemory.Hooks.HookBase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr EntryPointPointer 'get ' : 
  Methods:
    Execute(String[]): PrivateScope, Public, HideBySig
    ExecuteByteCode(Byte[]): PrivateScope, Public, HideBySig
    LockFrame(): PrivateScope, Public, HideBySig
    get_EntryPointPointer(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class MyMemory.Hooks.CallbackExecutor+FrameLock: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
    Void .ctor(MyMemory.Hooks.CallbackExecutor): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.IDisposable
  Methods:
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class MyMemory.Hooks.CallbackNotifier: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  :MyMemory.Hooks.CallbackBase
    Void .ctor(MyMemory.Hooks.HookBase): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    IntPtr EntryPointPointer 'get ' : 
  Methods:
    AddCallback(NotifyCallback): PrivateScope, Public, HideBySig
    RemoveCallback(NotifyCallback): PrivateScope, Public, HideBySig
    get_EntryPointPointer(): PrivateScope, Public, Virtual, HideBySig, SpecialName
Class MyMemory.Hooks.CallbackNotifier+NotifyArgs: AutoLayout, AnsiClass, Class, NestedPublic, BeforeFieldInit
  Properties:
    UInt32 ThreadId 'get ' IsLong : 
    BaseRegisters Registers 'get ' : 
  Methods:
    get_Registers(): PrivateScope, Public, HideBySig, SpecialName
    get_ThreadId(): PrivateScope, Public, HideBySig, SpecialName
Class MyMemory.Hooks.CallbackNotifier+NotifyCallback: AutoLayout, AnsiClass, Class, NestedPublic, Sealed, BeforeFieldInit
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(NotifyArgs): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(NotifyArgs, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class MyMemory.Patterns.PatternsManager: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
    Void .ctor(MyMemory.RemoteProcess): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Properties:
    MyMemory.RemoteProcess Process 'get ' : 
  Methods:
    FindPattern(String): PrivateScope, Public, HideBySig
    FindPattern(IntPtr, UInt32, String): PrivateScope, Public, HideBySig
    FindPattern(String, String): PrivateScope, Public, HideBySig
    FindPattern(IntPtr, UInt32, String, String): PrivateScope, Public, HideBySig
    get_Process(): PrivateScope, Public, HideBySig, SpecialName
